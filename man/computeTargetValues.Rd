% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/computeTargetValues.R
\name{computeTargetValues}
\alias{computeTargetValues}
\alias{computeTargetValues.default}
\alias{computeTargetValues.factor}
\title{Compute target values based on the item pool.}
\usage{
computeTargetValues(itemValues, ...)

\method{computeTargetValues}{default}(
  itemValues,
  nForms,
  testLength = NULL,
  allowedDeviation = NULL,
  relative = FALSE,
  ...
)

\method{computeTargetValues}{factor}(
  itemValues,
  nForms,
  testLength = NULL,
  allowedDeviation = NULL,
  relative = FALSE,
  ...
)
}
\arguments{
\item{itemValues}{Item parameter/values for which the sum per test form should be constrained.}

\item{nForms}{Number of forms to be created.}
}
\value{
a vector or a matrix with targetValues (see details)
}
\description{
Compute target values for item values/categories based on the number
of items in the item pool, the number of test forms to assemble and the number
of items in each test form (i.e., test length).
}
\details{
Both for numerical and categorical item values, the target values are the item
pool average scaled by the ratio of items in the forms and items in the item
pool.

When the \code{allowedDeviation} is \code{NULL} (the default), only one target
value is computed. Otherwise, the target is computed, but a minimal and a
maximal (target)value is returned, based on the allowed deviation. When
\code{relative == TRUE} the allowed deviation should be expressed as a
proportion. In that case the minimal and maximal values are a computed
proportionally.

When \code{itemValues} is a \code{factor}, a matrix with the minimal and
maximal target frequencies for every level of the factor are returned.
When \code{allowedDeviation} is \code{NULL}, the difference between the
minimal and maximal value is one (or zero).
}
\section{Methods (by class)}{
\itemize{
\item \code{default}: compute target values

\item \code{factor}: compute target frequencies for item categories
}}

\examples{


}
